{"name":"The castafiore framework","tagline":"","body":"### Welcome.\r\nCastafiore framework is a new web framework with the following features\r\n\r\n1. Write in one single language java\r\n2. Fully object oriented\r\n3. No custom compilation to generate javascript like GWT\r\n4. Can be server centric, or client centric or both. Everything with the same API\r\n5. Although for backend application there is no need for HTML or CSS, templates can be used easily.\r\n   Actually, the framework provides the easiest way to use html template. Scripting can be done in any scripting language available with java\r\n6. Lazy loading of resources like javascript, and css\r\n7. Very simple API.\r\n8. Easily integrate any javascript libraries\r\n9. many more....\r\n\r\n\r\n### Installation\r\n\r\nThe framework is consisted of the following files\r\n\r\n```\r\nMaven\r\n<dependency>\r\n  <groupId>org.castafiore</groupId>\r\n  <artifactId>org.castafiore.ui</artifactId>\r\n  <version>x.x.x</version>\r\n  <type>war</type>\r\n</dependency>\r\n\r\nDownload war\r\nhttp://www..com\r\n```\r\n\r\n### Getting started\r\nThe easiest way to start coding your first application is probably using maven.\r\nYou simply need to add the dependency stated above in your pom.xml and your are ready.\r\n\r\nIf you are not using maven, you can download the war, unzip it, put all the libraries in your class path.\r\nThen rename the war into your servlet container.\r\nTo run your codes, simple deploy all class files in the classes directory of the downloaded war\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}